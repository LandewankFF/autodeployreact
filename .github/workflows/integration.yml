name: cd cd on github

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  Build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies 
      run: npm install 
    
    - name: Build test 
      run: npm run build 
    
    - name: Test
      run: npm run test
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_EMAIL }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/react-app:latest .
    
    - name: Show Images
      run: docker images

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/react-app:latest

  Deploy:

    runs-on: ubuntu-latest
    needs: Build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker registry (using token)
      run: |
        echo $DOCKER_TOKEN | docker login --username $DOCKER_EMAIL --password-stdin
    
    - name: Remote server and pull docker image
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/react-app:latest 
            sudo docker images
            sudo docker ps -a
            sudo docker run -d --name react-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/react-app
            sudo docker ps
